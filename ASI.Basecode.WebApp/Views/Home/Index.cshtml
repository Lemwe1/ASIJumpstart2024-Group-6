@{
    Layout = "_Layout";
    ViewData["Title"] = "Home Page";
}
@section styles {
    <link rel="stylesheet" href="~/css/home.css" />
}

@section scripts {
    <script src="~/js/budget.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
}

@using ASI.Basecode.Data.Models
@using ASI.Basecode.Services.ServiceModels

<!-- Sidebar and Content -->
<div class="flex min-h-screen mt-5 ml-4 w-full">
    <!-- Main Content Area -->
    <div class="flex-1 pt-4 pl-4 bg-gray-100 container dark:bg-gray-800 text-gray-900 max-w-screen-xl mx-auto">

        <div class="flex lg:flex-row flex-col ml-2 gap-6">
            <!-- Main Dashboard Column -->
            <div class="flex-grow">
                <!-- Dashboard Header -->
                <div class="my-4">
                    <h2 class="text-2xl font-semibold dark:text-white">Dashboard</h2>
                </div>

                <!-- Dashboard Cards -->
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
                    <div class="bg-green-500 border dark:border-gray-600 shadow-md text-white p-4 rounded-lg h-full">
                        <h3 class="text-md font-medium">Net Balance</h3>
                        <p class="mt-4 text-2xl font-bold">‚Ç± @String.Format("{0:#,0.00}", ViewBag.NetBalance)</p>
                    </div>
                    <div class="bg-red-500 border dark:border-gray-600 shadow-md text-white p-4 rounded-lg h-full">
                        <h3 class="text-md font-medium">Total Expenses</h3>
                        <p class="mt-4 text-2xl font-bold">
                            <i class="fas fa-angles-up mr-2"></i>‚Ç± @String.Format("{0:#,0.00}", ViewBag.TotalExpense)
                        </p>
                    </div>
                    <div class="bg-blue-500 border dark:border-gray-600 text-white p-4 rounded-lg h-full">
                        <h3 class="text-md font-medium">Total Income</h3>
                        <p class="mt-4 text-2xl font-bold">
                            <i class="fas fa-angles-down mr-2"></i>‚Ç± @String.Format("{0:#,0.00}", ViewBag.TotalIncome)
                        </p>
                    </div>
                </div>

                <!-- Expense Trends -->
                <div class="flex justify-between items-center">
                    <h4 class="font-medium text-gray-600 text-lg dark:text-gray-300">Expense Trends</h4>
                    <div class="text-right">
                        <select id="trendFilter" name="trendFilter" class="border border-gray-300 dark:border-gray-700 dark:bg-gray-700 dark:text-white rounded-lg py-2 px-2">
                            <option value="monthly">üìÖ Monthly</option>
                            <option value="weekly">üóìÔ∏è Weekly</option>
                        </select>
                    </div>
                </div>
                <div class="mt-2 bg-gray-50 dark:bg-gray-700 dark:text-white p-6 rounded-lg mb-4 border border-gray-300 dark:border-gray-600">
                    <canvas id="trendsChart" width="424" height="200"></canvas>
                </div>

                <!-- Monthly Charts -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4  mb-4">
                    <div class="flex flex-col ">
                        <h4 class="font-medium text-gray-500 dark:text-gray-300 mb-2">Monthly Expense</h4>
                        <div class="bg-gray-50 dark:bg-gray-700 p-6 shadow-md rounded-lg border border-gray-300 dark:border-gray-600">
                            <canvas id="monthlyExpenseChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                    <div class="flex flex-col">
                        <h4 class="font-medium text-gray-500 dark:text-gray-300 mb-2">Monthly Income</h4>
                        <div class="bg-gray-50 dark:bg-gray-700 p-6 shadow-md rounded-lg border border-gray-300 dark:border-gray-600">
                            <canvas id="monthlyIncomeChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Budget Column -->
            <div id="budget-column"class="w-full lg:w-1/3 bg-gray-50 dark:bg-gray-900 p-4 border border-gray-300 dark:border-gray-600 my-4 rounded-lg mr-5 overflow-auto">
                <h3 class="text-xl font-semibold dark:text-white mb-4">Budgets</h3>

                <!-- Add Budget Button -->
                <div id="addBudgetButton" class="accountCard p-4 rounded-lg flex flex-col items-center justify-center cursor-pointer relative border-4 border-dashed border-gray-400 dark:border-gray-600 mb-4">
                    <i class="fas fa-plus text-3xl text-gray-400 dark:text-gray-600 mb-2"></i>
                    <span class="text-gray-500 dark:text-gray-300">Add Budget</span>
                </div>

                <!-- Display Budgets -->
                <div id="budgetCards">   
                    @if (ViewData["Budgets"] is List<BudgetViewModel> budgets && budgets.Any())
                    {
                        @Html.AntiForgeryToken()
                        foreach (var budget in budgets)
                        {
                            <div class="budgetCard bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border dark:border-gray-600 mb-4">
                                <div class="flex items-center">
                                    <div class="w-14 h-14 rounded-lg flex items-center justify-center text-3xl mr-4" style="background-color:@budget.CategoryColor">
                                        @budget.CategoryIcon
                                    </div>
                                    <div class="flex-1">
                                        <h5 class="font-semibold text-lg dark:text-white">@budget.CategoryName</h5>
                                        <p class="text-gray-600 dark:text-gray-300 text-sm">Budget: <b class="text-blue-400">‚Ç± @budget.MonthlyBudget</b></p>
                                    </div>
                                </div>

                                <!-- Displaying Remaining Balance or Over Budget -->
                                <p class="text-sm text-gray-300 mt-4">
                                    @if (@budget.RemainingBudget < 0)
                                    {
                                        <i class="text-gray-500 dark:text-gray-300">Over Budget: <b class="text-red-500">‚Ç± @Math.Abs(@budget.RemainingBudget)</b></i>
                                    }
                                    else
                                    {
                                        <i class="text-gray-500 dark:text-gray-300">Remaining Balance: <b class="text-green-500">‚Ç± @budget.RemainingBudget</b></i>
                                    }
                                </p>
                                <!-- Progress bar -->
                                <div class="w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2 mt-2">
                                    <div class="h-2 rounded-full"
                                         style="width: @(Math.Min(100, (100 - ((@budget.RemainingBudget / @budget.MonthlyBudget) * 100))))%;
                                         background-color: @( @budget.RemainingBudget < 0 ? "red" : (@budget.RemainingBudget < @budget.MonthlyBudget ? "green" : "gray"))">
                                    </div>
                                </div>

                            </div>


                        }
                    }
                    else
                    {
                        <p class="text-sm text-gray-500">No budgets available to display.</p>
                    }

                </div>
                @Html.Partial("CreateBudget")

            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/home.js" asp-append-version="true"></script>
