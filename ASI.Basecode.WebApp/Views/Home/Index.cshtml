@{
    Layout = "_Layout";
    ViewData["Title"] = "Home Page";
}
@section styles {
    <link rel="stylesheet" href="~/css/home.css" />
}

@section scripts {
    <script src="~/js/budget.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
}

@using ASI.Basecode.Data.Models
@using ASI.Basecode.Services.ServiceModels

<!-- Sidebar and Content -->
<div class="flex min-h-screen mt-5 w-full">
    <!-- Main Content Area -->
    <div class="flex-1 pt-4 pl-4 bg-gray-100 container dark:bg-gray-800 text-gray-900 max-w-screen-xl mx-auto">

        <div class="flex lg:flex-row flex-col ml-2 gap-6">
            <!-- Main Dashboard Column -->
            <div class="flex-grow">
                <!-- Dashboard Header -->
                <div class="my-4">
                    <h2 class="text-2xl font-semibold dark:text-white">Dashboard</h2>
                </div>

                <!-- Dashboard Cards -->
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
                    <!-- Current Balance -->
                    <div class="bg-green-500 border-2 border-gray-900 dark:border-gray-600 shadow-md text-white p-4 rounded-lg flex flex-col justify-between h-full">
                        <h3 class="text-sm">Net Balance</h3>
                        <p class="mt-10 text-2xl font-bold">‚Ç± @String.Format("{0:#,0.00}", ViewBag.NetBalance)</p>
                    </div>
                    <!-- Total Expenses -->
                    <div class="bg-red-500 border-2 border-gray-900 dark:border-gray-600 shadow-md text-white p-4 rounded-lg flex flex-col justify-between h-full">
                        <h3 class="text-sm">Total Expenses</h3>
                        <p class="mt-10 text-2xl font-bold">
                            <i class="fas fa-angles-up text-2xl font-bold mr-2"></i>‚Ç± @String.Format("{0:#,0.00}", ViewBag.TotalExpense)
                        </p>
                    </div>
                    <!-- Total Income -->
                    <div class="bg-blue-500 border-2 border-gray-900 dark:border-gray-600 text-white p-4 rounded-lg flex flex-col justify-between h-full">
                        <h3 class="text-sm">Total Income</h3>
                        <p class="mt-10 text-2xl font-bold">
                            <i class="fas fa-angles-down text-2xl font-bold mr-2"></i>‚Ç± @String.Format("{0:#,0.00}", ViewBag.TotalIncome)
                        </p>
                    </div>
                </div>

                <!-- Expense Trends Section -->
                <div class="flex justify-between items-center mb-4">
                    <h4 class="font-medium text-gray-600 text-lg dark:text-gray-300">Expense Trends</h4>
                    <div class="text-right">
                        <select id="trendFilter" name="trendFilter" class="border border-gray-300 dark:border-gray-700 dark:bg-gray-700 dark:text-white rounded-lg px-4 py-2 pr-5">
                            <option value="monthly"> üìÖ Monthly</option>
                            <option value="weekly">üóìÔ∏è Weekly</option>
                        </select>
                    </div>
                </div>

                <!-- Expense Trends -->
                <div class="bg-gray-50 dark:bg-gray-700 dark:text-white p-6 rounded-lg mb-4 border border-gray-300 dark:border-gray-600">
                    <canvas id="trendsChart" width="424" style="height: 200px;" class="text-gray-900 dark:text-white text-xl"></canvas>
                </div>

                <!-- Monthly Charts -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Monthly Expense Chart -->
                    <div class="flex flex-col">
                        <h4 class="font-medium text-gray-500 dark:text-gray-300 mb-2">Monthly Expense</h4>
                        <div class="bg-gray-50 dark:bg-gray-700 dark:text-white p-6 shadow-md rounded-lg">
                            <canvas id="monthlyExpenseChart" width="400" height="200"></canvas>
                        </div>
                    </div>

                    <!-- Monthly Income Chart -->
                    <div class="flex flex-col">
                        <h4 class="font-medium text-gray-500 dark:text-gray-300 mb-2">Monthly Income</h4>
                        <div class="bg-gray-50 dark:bg-gray-700 dark:text-white p-6 shadow-md rounded-lg">
                            <canvas id="monthlyIncomeChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>

            </div>

            <!-- Budget Column -->
            <div class="w-full lg:w-1/3 bg-gray-50 dark:bg-gray-800 p-4 border-l-2 border-gray-300 dark:border-gray-600 flex flex-col justify-start">
                <h3 class="text-xl font-semibold dark:text-white mb-4">Budgets</h3>

                <!-- Add Budget Button -->
                <div id="addBudgetButton" class="accountCard p-4 rounded-lg flex flex-col items-center justify-center cursor-pointer relative border-4 border-dashed border-gray-400 dark:border-gray-600 mb-4">
                    <i class="fas fa-plus text-3xl text-gray-400 dark:text-gray-600 mb-2"></i>
                    <span class="text-gray-500 dark:text-gray-300">Add Budget</span>
                </div>

                <!-- Display Budgets -->
                <div id="budgetCards">
                    @if (ViewData["Budgets"] is List<MBudget> budgets && budgets.Any())
                    {
                        foreach (var budget in budgets)
                        {
                            <div class="budgetCard p-4 rounded-lg bg-gray-50 dark:bg-gray-700 flex flex-col relative mb-4">
                                <div class="flex justify-between">
                                    <h4 class="text-lg font-medium">@budget.Category.Name</h4>
                                    <a href="#" class="text-sm text-blue-500">Edit</a>
                                </div>
                                <p class="text-sm text-gray-500">Budget: ‚Ç± @String.Format("{0:#,0}", budget.MonthlyBudget)</p>
                                <p class="text-sm text-gray-500">Remaining Budget: ‚Ç± @String.Format("{0:#,0}", budget.RemainingBudget)</p>
                                <div class="w-full bg-gray-200 rounded-full h-2.5 mt-2">
                                    <div class="bg-blue-500 h-2.5 rounded-full"
                                         style="width: @(Math.Round((budget.RemainingBudget / budget.MonthlyBudget) * 100, 2))%"></div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-gray-500">No budgets available. Add one now!</p>
                    }
                </div>


            </div>
        </div>
    </div>
</div>

<!-- Budget Modal -->
<div id="budgetModal" class="hidden fixed z-50 inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center">
    <div class="bg-white dark:bg-gray-800 p-6 rounded-lg w-96">
        <h3 id="modalTitle" class="text-xl font-semibold mb-4 dark:text-white">Add Budget</h3>

        <form id="budgetForm">
            @Html.AntiForgeryToken()
            <input type="hidden" id="userId" value="@User.Claims.FirstOrDefault(c => c.Type == "UserId")?.Value" />
            <!-- Category Dropdown -->
            <div class="mb-4">
                <label for="transactionCategory" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                    Category <i class="text-red-500">*</i>
                </label>
                <select id="transactionCategory" name="CategoryId" required class="dark:bg-gray-700 mt-1 block w-full px-4 py-2 border rounded-md text-gray-900 dark:text-white">
                    <option class="text-gray-500" value="" disabled>Select category</option>

                    @if (ViewData["Categories"] is List<MCategory> categories && categories.Any(c => c.Type == "Expense"))
                    {
                        foreach (var category in categories.Where(c => c.Type == "Expense"))
                        {
                            <option value="@category.CategoryId" data-type="@category.Type">@category.Icon @category.Name</option>
                        }
                    }
                    else
                    {
                        <option value="" disabled>No categories available</option>
                    }
                </select>
            </div>

            <!-- Budget Amount -->
            <div class="mb-4">
                <label for="budgetAmount" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Budget</label>
                <input type="number" id="budgetAmount" name="budgetAmount" class="mt-1 block w-full p-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white" required />
            </div>

            <!-- Buttons -->
            <div class="flex justify-end gap-4">
                <button type="button" id="cancelButton" class="px-4 py-2 bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-500">
                    Cancel
                </button>
                <button type="submit" id="saveBudgetButton" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
                    Save
                </button>
            </div>
        </form>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/home.js" asp-append-version="true"></script>
