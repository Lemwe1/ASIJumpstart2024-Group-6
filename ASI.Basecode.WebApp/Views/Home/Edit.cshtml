@{
    ViewData["Title"] = "Edit";
}

@section styles {
    <link rel="stylesheet" href="~/css/home.css" />
}

@using ASI.Basecode.Data.Models
@using ASI.Basecode.Services.ServiceModels

<!-- Edit Budget Modal -->
<div id="editBudgetModal" class="modal hidden fixed z-50 inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center">
    <div class="modal-content bg-gray-50 dark:bg-gray-800 p-6 rounded-lg w-96">
        
        <!-- Modal Header -->
        <div class="flex justify-between items-center mb-2">
            <h2 class="text-2xl font-bold dark:text-white">Edit Budget</h2>
            <button id="closeEditBudgetModalBtn" class="absolute top-2 right-2 text-gray-400 hover:bg-gray-200 p-2 w-10 rounded-full">
                <i class="fas fa-times"></i>
            </button>
        </div>
        
        <!-- Modal Description -->
        <p class="text-gray-600 mb-4 dark:text-gray-300">Edit the fields below to update the budget.</p>

        <!-- Edit Budget Form -->
            <form id="editBudgetForm" method="post">
                @Html.AntiForgeryToken()

                <input type="hidden" name="budgetId" id="budgetId" />

                <!-- Category Dropdown -->
                <div class="mb-4">
                <label for="editBudgetCategory" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                        Category <i class="text-red-500">*</i>
                    </label>
                <select id="editBudgetCategory" name="CategoryId" required class="dark:bg-gray-700 mt-1 block w-full px-1 py-3 border rounded-md text-gray-900 dark:text-white">
                        <option class="text-gray-500" value="" disabled>Select category</option>

                            @if (ViewData["Categories"] is List<MCategory> categories && categories.Any(c => c.Type == "Expense" && c.Name != "Default Expense"))
                            {
                                foreach (var category in categories.Where(c => c.Type == "Expense"))
                                {
                                    <option value="@category.CategoryId" data-type="@category.Type">@category.Icon @category.Name</option>
                                }
                            }
                            else
                            {
                                <option value="" disabled>No categories available</option>
                            }
                    </select>
                </div>

                <!-- Budget Amount -->
                <div class="mb-4">
                    <label for="editBudgetAmount" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Budget <i class="text-red-500">*</i></label>

                    <div class="relative mt-1">
                        <!-- Wrapper for the input field and the peso sign -->
                        <span class="absolute mb-3 ml-2 mt-4 pt-2 transform -translate-y-1/2 text-gray-500 dark:text-gray-300">â‚±</span>
                        <input type="number" step="0.01" id="editBudgetAmount" name="budgetAmount" placeholder="0.00" required class="pl-8 mt-1 block w-full px-4 py-3 border rounded-md dark:bg-gray-700 dark:text-gray-300 text-gray-900" />
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex mt-6 justify-between w-full space-x-4 mt-10">
                    <button type="button" id="deleteBudgetButton" class="bg-red-500 text-white hover:bg-red-600 p-3 rounded-md w-full">
                        Delete
                    </button>
                    <button type="submit" class="bg-blue-500 text-white hover:bg-blue-700 p-3 rounded-md w-full">
                        Save
                    </button>
                </div>
            </form>

    </div>
</div>